package comp1110.ass2;

import java.util.ArrayList;
import java.util.Arrays;

import static comp1110.ass2.Board.*;
import static comp1110.ass2.RailroadInk.isValidPlacementSequence;

public class Test02 {

    public static void main(String[] args) {

        //过不了的字符串
        String boardString = "A3A53S0A44B1A35A0B03A0F07A0B61A4A61A1C00B0D02S4E00A4G10A4F10B1E12A2G31S3G20A4A10A4B10A4C10B0D10A5D62A0F61B1G56A2E67B0G41A2F22";
        String diceRoll = "A5A1A5B0";


        /*String boardString = "A1A30A1G30B0F30A4E30S2D30A1B30B0C32A4D41A1B61S1B50A1B01S5B10A1B21A4A10B0C10A1B41A1F61A4D61B0F53A4D51B0D21A1D11A1F01A4G10A1F11B0D03A1F21";
        String diceRoll = "A1A1A4B0";*/

        /*String boardString = "A3A10B2A31A1B30A0F61A4A21B1B14A4A41A4D61S2A50A5A63A2B01A1C02B0G52S0B63A0E63A2E51A4D51B0C32A5D31A5C61A0E41S5D41B1D03A5B51A4G10A0C42B0G30";
        String diceRoll = "A4A4A4B1";*/


        // String result = getMove(boardString, diceRoll);

        String[] head = new String[1];

        ArrayList<String> list = new ArrayList();

        head[0] = diceRoll.substring(2, 4);

        String[] emptyGrid = getEmptyGrids(boardString);

        //将所有空格与该骰子的所有可能贴图放入集合中
        for (
                int i = 0;
                i < emptyGrid.length; i++) {

            for (int j = 0; j < 8; j++) {
                list.add("" + head[0] + emptyGrid[i] + j);

            }
        }

        String validPlacementString = getValidPlacementString(boardString, list);
        System.out.println(validPlacementString);


        ArrayList<String> allPlacement = getPlacementGrids(boardString);


        for (
                int i = 0; i < allPlacement.size(); i++) {
            System.out.println(allPlacement.get(i));
        }

        String[] emptyGrid1 = getEmptyGrids(boardString);
        System.out.println(Arrays.toString(emptyGrid1));


        boolean flag = isValidPlacementSequence(boardString);
        System.out.println(flag);


        /*
        "A1E51B0B42A5C40A5C32", "B0B42A5C41A1E51A5C50", "B0E20A1G61A5D22A5D30",
        "A1B40B0E53A5E41A5D43", "B0E20A5D23A1E51", "B0B42A5C41A1E51A5C53",
        "A1E51B0B42A5C40A5C31", "B0E20A1G61A5D22A5D33", "A1E51B0E20A5D23",
        "A1E20B0G61", "A1B40B0E53A5E41A5D42", "B0E20A1G61A5D23", "A1E20B0E53A5E41A5D42",
        "A1E20B0E53A5E41A5D43", "B0B42A5C40A5C31A1G61", "B0B42A5C40A5C31A1E20",
        "B0B42A1G61A5C41A5C53", "A1E51B0G61", "B0E53A5E42A1B40A5F41",
        "B0E53A5E42A1B40A5F40", "B0B42A5C41A1E20A5C50", "B0E53A1B40A5E42A5F41",
        "B0E53A1B40A5E42A5F40", "B0B42A5C41A1E20A5C53", "B0E20A5D22A5D30A1G61",
        "A1E51B0B42A5C41A5C50", "B0B42A5C41A5C50A1E51", "B0B42A5C40A1E20A5C32",
        "B0B42A5C40A1E20A5C31", "A1E51B0E20A5D22A5D33", "A1E51B0E20A5D22A5D30",
        "B0E53A1G61A5E42A5F40", "B0B42A1E51A5C41A5C50", "B0E53A1G61A5E42A5F41",
        "B0B42A5C40A1G61A5C31", "B0B42A5C40A1G61A5C32", "B0E20A5D22A1G61A5D33",
        "B0E53A5E41A1G61A5D43", "B0E53A5E41A1G61A5D42", "A1G61B0E53A5E41A5D42",
        "B0G61A1B40", "B0E20A5D22A1G61A5D30", "A1E20B0D20A5C22A5C33",
        "A1G61B0E20A5D22A5D30", "A1G61B0E53A5E41A5D43", "A1G61B0E20A5D22A5D33",
        "B0G61A1E20", "A1E20B0B42A5C40A5C31", "A1E20B0B42A5C40A5C32", "B0E20A1E51A5D22A5D30",
        "A1E51B0B42A5C41A5C53", "B0B42A1E20A5C41A5C50", "B0E20A5D22A5D30A1B40",
        "B0E20A1E51A5D22A5D33", "B0E53A5E41A5D43A1G61", "B0E53A5E42A1G61A5F41",
        "B0E53A5E41A5D43A1E20", "B0E53A5E42A1G61A5F40", "B0E53A5E41A5D43A1B40",
         "B0E20A1E51A5D23", "A1G61B0B42A5C41A5C53", "B0B42A5C41A1G61A5C50",
         "B0B42A1G61A5C41A5C50", "B0B42A5C41A1G61A5C53", "B0B42A5C40A5C31A1E51",
         "B0B42A1E51A5C41A5C53", "B0B42A5C40A5C32A1E20", "B0B42A5C40A5C32A1G61",
         "A1B40B0E20A5D23", "A1B40B0E20A5D22A5D33", "B0B42A5C41A5C53A1E20",
         "A1B40B0E20A5D22A5D30", "A1B40B0C42A5D40A5D31", "A1G61B0B42A5C40A5C31",
         "A1G61B0B42A5C40A5C32", "A1B40B0E53A5E42A5F41", "A1B40B0E53A5E42A5F40", "A1G61B0B42A5C41A5C50", "B0E20A5D22A5D33A1B40", "B0E20A5D22A5D33A1G61", "A1B40B0C42A5D40A5D32", "A1E20B0D20A5C23", "A1E20B0E53A5E42A5F40", "B0B42A1E20A5C41A5C53", "B0E20A5D23A1G61", "B0E20A5D22A1E51A5D30", "A1E20B0E53A5E42A5F41", "B0E20A5D23A1B40", "A1B40B0C42A5D41A5D53", "B0E20A1B40A5D23", "B0G61A1E51", "A1B40B0C42A5D41A5D50", "A1G61B0E20A5D23", "B0E20A5D22A1E51A5D33", "A1E20B0D20A5C22A5C30", "B0E53A1E20A5E42A5F41", "B0B42A5C41A5C53A1G61", "B0E53A1E20A5E42A5F40", "B0E53A5E41A5D42A1E20", "B0E53A5E41A5D42A1G61", "B0E53A5E42A5F40A1G61", "B0E53A5E42A5F40A1E20", "A1E51B0E43A5E32A5F30", "A1E51B0E43A5E32A5F31", "B0E53A5E41A5D42A1B40", "B0E53A5E42A5F40A1B40", "B0B42A5C41A5C50A1E20", "B0E53A1E20A5E41A5D42", "B0B42A5C41A5C50A1G61", "B0B42A1E20A5C40A5C32", "B0E53A1E20A5E41A5D43", "B0B42A1E20A5C40A5C31", "B0E53A5E42A1E20A5F41", "B0E20A1B40A5D22A5D30", "B0E53A5E42A1E20A5F40", "A1B40B0G61", "A1E20B0B42A5C41A5C50", "B0B42A5C41A5C53A1E51", "B0E53A1G61A5E41A5D43", "B0E53A1G61A5E41A5D42", "A1G61B0E53A5E42A5F40", "A1G61B0E53A5E42A5F41", "B0E20A1B40A5D22A5D33", "B0B42A5C40A5C32A1E51", "B0E53A5E42A5F41A1B40", "B0E53A5E42A5F41A1G61", "A1E51B0E43A5E31A5D33", "B0B42A1E51A5C40A5C32", "A1E51B0E43A5E31A5D32", "B0B42A1E51A5C40A5C31", "B0E53A5E42A5F41A1E20", "B0E53A1B40A5E41A5D42", "A1E20B0B42A5C41A5C53", "B0E53A1B40A5E41A5D43", "B0E20A5D22A1B40A5D33", "B0E20A5D22A1B40A5D30", "B0E53A5E41A1B40A5D43", "B0E53A5E41A1B40A5D42", "B0E53A5E41A1E20A5D42", "B0E53A5E41A1E20A5D43", "B0B42A5C40A1E51A5C31", "B0B42A5C40A1E51A5C32", "B0B42A1G61A5C40A5C31", "B0B42A1G61A5C40A5C32", "B0E20A5D22A5D30A1E51", "B0E20A5D22A5D33A1E51"},





A1D30A1F30A4E41B0G32
         */


    }

}